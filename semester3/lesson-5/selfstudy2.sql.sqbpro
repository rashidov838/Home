<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/WINDOWS 10/Documents/Githome/semester3/lesson3/database/album.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure query browser pragmas" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="110"/><column_width id="3" width="1169"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainalbum"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="45"/><column index="2" value="163"/><column index="3" value="226"/><column index="4" value="78"/><column index="5" value="81"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="track" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="0"/></sort><column_widths><column index="1" value="45"/><column index="2" value="77"/><column index="3" value="261"/><column index="4" value="113"/><column index="5" value="71"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- SELECT sum(first_name) from people;

-- SELECT sum(age) from people;

-- SELECT avg(age) from people;

-- SELECT avg(quiz_points) from people where company is NULL;

-- SELECT min(age) from people;

-- SELECT max(age) from people;

-- SELECT max(first_name) from people;L

-- SELECT first_name,round(age,2) as 'Средний возраст' from people WHERE age BETWEEN 30 and 40
--  from  people;



-- SELECT city ,state_code,avg(age) from people WHERE city like 'B%' GROUP By 1  ORDER by 1 LIMIT 10 ;


-- SELECT city ,state_code,avg(age) from people WHERE city like 'B%' GROUP By 1 HAVING state_code like 'C%' ORDER by 1 LIMIT 10 ;


-- SELECT city,upper(state_code) , avg(age) as 'Avg_age' from people WHERE city like 'B%' GROUP By 1 HAVING sum(quiz_points)&gt;33 ORDER by age  limit 10;


-- SELECT * from track JOIN album On track.album_id= album.id;

-- SELECT track.id as ID, album.id as alb_id ,track.title as track_title,album.title as ALB_Title from track JOIN album on track.album_id=album.id;
-- Inner это одно и тоже

-- SELECT track.id as ID, album.id as alb_id ,track.title as track_title,album.title as ALB_Title from track INNER JOIN album on track.album_id=album.id;


-- SELECT track.id as ID, album.id as alb_id ,track.title as track_title,album.title as ALB_Title,track_number,label from track LEFT JOIN album on track.album_id=album.id;


-- SELECT track.id as ID, album.id as alb_id ,track.title as track_title,album.title as ALB_Title,track_number,label from track CROSS JOIN album on track.album_id=album.id;
-- cross make combination (1,2;1,1;1,3) like zip()


-- SELECT * from track 
-- UNION 
-- SELECT * from album;

</sql><current_tab id="0"/></tab_sql></sqlb_project>
